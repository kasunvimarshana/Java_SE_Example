/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chartex;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Locale;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author KASUN
 */
public class MyChartViewer extends javax.swing.JFrame {

    /**
     * Creates new form MyChartViewer
     */
    public MyChartViewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Bar Chart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Pie Chart");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Line Chart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton4.setText("BarChart with DB");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jInternalFrame1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrame1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(0, 303, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void myBarChartDB() {
        try {
            DefaultCategoryDataset defaultCategoryDataset = new DefaultCategoryDataset();
            
            String url = "jdbc:mysql://localhost:3306/stock";
            String un = "root";
            String pw = "root";
            String sql = "SELECT * From item";
            
            Class.forName("com.mysql.jdbc.Driver");
            
            Connection connection = DriverManager.getConnection(url, un, pw);
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);
            
            while(resultSet.next()){
                defaultCategoryDataset.addValue(resultSet.getDouble("qty"), resultSet.getString("item_name"), "Products");
            }
            
            JFreeChart jFreeChart = ChartFactory.createBarChart(
                    "Stock Availability", //Title
                    "Products", //X-Axis Label
                    "Qty", //Y-Axis Label
                    defaultCategoryDataset, //Dataset
                    PlotOrientation.VERTICAL, //Orientation 
                    true, //Show Legend
                    true, //Show Tool Tip
                    true //Allow URI
            );

            ChartPanel chartPanel = new ChartPanel(jFreeChart);
            jInternalFrame1.setContentPane(chartPanel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            /*DefaultCategoryDataset defaultCategoryDataset = new DefaultCategoryDataset();
             defaultCategoryDataset.addValue(4, "1", "Overs");
             defaultCategoryDataset.addValue(9, "2", "Overs");
             defaultCategoryDataset.addValue(13, "3", "Overs");
             defaultCategoryDataset.addValue(18, "4", "Overs");
             defaultCategoryDataset.addValue(9, "5", "Overs");*/

            DefaultCategoryDataset defaultCategoryDataset = new DefaultCategoryDataset();
            defaultCategoryDataset.addValue(4, "SL", "1");
            defaultCategoryDataset.addValue(9, "PK", "1");
            defaultCategoryDataset.addValue(5, "SL", "2");
            defaultCategoryDataset.addValue(5, "PK", "2");
            defaultCategoryDataset.addValue(10, "SL", "3");
            defaultCategoryDataset.addValue(5, "PK", "3");
            defaultCategoryDataset.addValue(15, "SL", "4");
            defaultCategoryDataset.addValue(5, "PK", "4");
            defaultCategoryDataset.addValue(5, "SL", "5");
            defaultCategoryDataset.addValue(5, "PK", "5");

            JFreeChart jFreeChart = ChartFactory.createBarChart(
                    "Score of Sri Lanka", //Title
                    "Overs", //X-Axis Label
                    "Score", //Y-Axis Label
                    defaultCategoryDataset, //Dataset
                    PlotOrientation.VERTICAL, //Orientation 
                    true, //Show Legend
                    true, //Show Tool Tip
                    true //Allow URI
            );

            ChartPanel chartPanel = new ChartPanel(jFreeChart);
            jInternalFrame1.setContentPane(chartPanel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            /*DefaultPieDataset defaultPieDataset = new DefaultPieDataset();
             defaultPieDataset.setValue("6 Runs", 36);
             defaultPieDataset.setValue("4 Runs", 44);
             defaultPieDataset.setValue("3 Runs", 6);
             defaultPieDataset.setValue("2 Runs", 46);
             defaultPieDataset.setValue("1 Runs", 17);*/

            DefaultPieDataset defaultPieDataset = new DefaultPieDataset();
            defaultPieDataset.setValue("JVP", 100);
            defaultPieDataset.setValue("UNP", 100);
            defaultPieDataset.setValue("SLNP", 100);

            JFreeChart jFreeChart = ChartFactory.createPieChart(
                    "Wagon Wheel of T.M. Dilshan", //Title
                    defaultPieDataset, //Dataset
                    true, //Show Legend
                    true,
                    Locale.ENGLISH
            );

            ChartPanel chartPanel = new ChartPanel(jFreeChart);
            jInternalFrame1.setContentPane(chartPanel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            XYSeriesCollection xySeriesCollection = new XYSeriesCollection();

            XYSeries xySeries1 = new XYSeries("Sri Lanka");
            xySeries1.add(1.0, 1.0);
            xySeries1.add(2.0, 4.0);
            xySeries1.add(3.0, 3.0);
            xySeries1.add(4.0, 5.0);
            xySeries1.add(5.0, 5.0);
            xySeries1.add(6.0, 7.0);
            xySeries1.add(7.0, 7.0);

            XYSeries xySeries2 = new XYSeries("Pakisthan");
            xySeries2.add(1.0, 5.0);
            xySeries2.add(2.0, 3.0);
            xySeries2.add(5.0, 7.0);
            xySeries2.add(5.0, 5.0);
            xySeries2.add(6.0, 7.0);
            xySeries2.add(7.0, 7.0);

            xySeriesCollection.addSeries(xySeries1);
            xySeriesCollection.addSeries(xySeries2);

            JFreeChart jFreeChart = ChartFactory.createXYLineChart(
                    "Score Progress Compare", //Chart Title
                    "Over", //X axis Label
                    "Score", //y axis Label
                    xySeriesCollection, //Dataset
                    PlotOrientation.VERTICAL, //Orientation
                    true, //include Legend
                    true, //tooltips
                    false //urls
            );

            ChartPanel chartPanel = new ChartPanel(jFreeChart);
            jInternalFrame1.setContentPane(chartPanel);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        myBarChartDB();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyChartViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyChartViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyChartViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyChartViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyChartViewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    // End of variables declaration//GEN-END:variables
}
